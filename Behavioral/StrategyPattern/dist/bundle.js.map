{"version":3,"sources":["webpack://typescript/./Behavioral/StrategyPattern/src/index.ts"],"names":[],"mappings":";;;;;;AAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","file":"./Behavioral/StrategyPattern/dist/bundle.js","sourcesContent":["\"use strict\";\nclass FlyWithWings {\n    fly() {\n        console.log(\"I am flying with wings\");\n    }\n}\nclass Nofly {\n    fly() {\n        console.log(\"I can't fly\");\n    }\n}\nclass Quack {\n    quack() {\n        console.log(\"Quack!!\");\n    }\n}\nclass Squeak {\n    quack() {\n        console.log(\"Squeak!!\");\n    }\n}\nclass Duck {\n    get performFly() {\n        return this.flyBehavior.fly;\n    }\n    get performQuack() {\n        return this.quackBehavior.quack;\n    }\n    setFlyBehavior(fb) {\n        this.flyBehavior = fb;\n    }\n    setQuackBehavior(qb) {\n        this.quackBehavior = qb;\n    }\n}\nclass MallardDuck extends Duck {\n    constructor() {\n        super(...arguments);\n        this.flyBehavior = new FlyWithWings();\n        this.quackBehavior = new Quack();\n    }\n    display() {\n        console.log(\"I am a Mallard duck\");\n    }\n}\nconst mallard = new MallardDuck();\nclass MiniDuckSimulator {\n    static main() {\n        const mallard = new MallardDuck();\n        mallard.performQuack();\n        mallard.performFly();\n        mallard.performQuack();\n    }\n}\nconst sim = MiniDuckSimulator.main();\nconsole.log(sim);\n"],"sourceRoot":""}